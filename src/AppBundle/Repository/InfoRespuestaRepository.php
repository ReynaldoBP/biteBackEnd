<?php

namespace AppBundle\Repository;
use Doctrine\ORM\Query\ResultSetMappingBuilder;

/**
 * InfoRespuestaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InfoRespuestaRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Documentación para la función 'getRespuestaCriterio'
     * Método encargado de retornar las respuestas de los clientes
     * según los parámetros recibidos.
     * 
     * @author Kevin Baque
     * @version 1.0 15-09-2019
     * 
     * @return array  $arrayRespuesta
     * 
     */
    public function getRespuestaCriterio($arrayParametros)
    {
        $intIdPregunta      = $arrayParametros['intIdPregunta'] ? $arrayParametros['intIdPregunta']:'';
        $intIdCliente       = $arrayParametros['intIdCliente'] ? $arrayParametros['intIdCliente']:'';
        $strEstado          = $arrayParametros['strEstado'] ? $arrayParametros['strEstado']:array('ACTIVO','INACTIVO','ELIMINADO');
        $arrayRespuesta     = array();
        $strMensajeError    = '';
        $objRsmBuilder      = new ResultSetMappingBuilder($this->_em);
        $objQuery           = $this->_em->createNativeQuery(null, $objRsmBuilder);
        $objRsmBuilderCount = new ResultSetMappingBuilder($this->_em);
        $objQueryCount      = $this->_em->createNativeQuery(null, $objRsmBuilderCount);
        try
        {
            $strSelect      = "SELECT IPR.ID_PREGUNTA,IPR.DESCRIPCION AS DESCRIPCION_PREGUNTA,IPR.OBLIGATORIA,IPR.ESTADO AS ESTADO_PREGUNTA,
                                IC.DESCRIPCION AS DESCRIPCION_ENCUESTA, IC.TITULO,IC.ESTADO AS ESTADO_ENCUESTA,
                                ICLT.ID_CLIENTE,ICLT.IDENTIFICACION,ICLT.NOMBRE,ICLT.APELLIDO,ICLT.CORREO,ICLT.ESTADO AS ESTADO_CLIENTE ";
            $strSelectCount = "SELECT COUNT(*) AS CANTIDAD ";
            $strFrom        = "FROM INFO_RESPUESTA IRE
                                JOIN INFO_PREGUNTA IPR ON IPR.ID_PREGUNTA=IRE.PREGUNTA_ID
                                JOIN INFO_ENCUESTA IC ON IC.ID_ENCUESTA=IPR.ENCUESTA_ID
                                JOIN INFO_CLIENTE ICLT ON ICLT.ID_CLIENTE=IRE.CLIENTE_ID ";
            $strWhere       = "WHERE IRE.ESTADO in (:ESTADO) ";
            $objQuery->setParameter("ESTADO",$strEstado);
            $objQueryCount->setParameter("ESTADO",$strEstado);
            if(!empty($intIdPregunta))
            {
                $strWhere .= " AND IPR.ID_PREGUNTA =:ID_PREGUNTA";
                $objQuery->setParameter("ID_PREGUNTA", $intIdPregunta);
                $objQueryCount->setParameter("ID_PREGUNTA", $intIdPregunta);
            }
            if(!empty($intIdCliente))
            {
                $strWhere .= " AND ICLT.ID_CLIENTE =:ID_CLIENTE";
                $objQuery->setParameter("ID_CLIENTE", $intIdCliente);
                $objQueryCount->setParameter("ID_CLIENTE", $intIdCliente);
            }

            $objRsmBuilder->addScalarResult('ID_PREGUNTA', 'ID_PREGUNTA', 'string');
            $objRsmBuilder->addScalarResult('DESCRIPCION_PREGUNTA', 'DESCRIPCION_PREGUNTA', 'string');
            $objRsmBuilder->addScalarResult('ESTADO_PREGUNTA', 'ESTADO_PREGUNTA', 'string');
            $objRsmBuilder->addScalarResult('OBLIGATORIA', 'OBLIGATORIA', 'string');
            $objRsmBuilder->addScalarResult('DESCRIPCION_ENCUESTA', 'DESCRIPCION_ENCUESTA', 'string');
            $objRsmBuilder->addScalarResult('TITULO', 'TITULO', 'string');
            $objRsmBuilder->addScalarResult('ESTADO_ENCUESTA', 'ESTADO_ENCUESTA', 'string');
            $objRsmBuilder->addScalarResult('ID_CLIENTE', 'ID_CLIENTE', 'string');
            $objRsmBuilder->addScalarResult('IDENTIFICACION', 'IDENTIFICACION', 'string');
            $objRsmBuilder->addScalarResult('NOMBRE', 'NOMBRE', 'string');
            $objRsmBuilder->addScalarResult('APELLIDO', 'APELLIDO', 'string');
            $objRsmBuilder->addScalarResult('CORREO', 'CORREO', 'string');
            $objRsmBuilder->addScalarResult('ESTADO_CLIENTE', 'ESTADO_CLIENTE', 'string');

            $objRsmBuilderCount->addScalarResult('CANTIDAD', 'Cantidad', 'integer');
            $strSql       = $strSelect.$strFrom.$strWhere;
            $objQuery->setSQL($strSql);
            $strSqlCount  = $strSelectCount.$strFrom.$strWhere;
            $objQueryCount->setSQL($strSqlCount);
            $arrayRespuesta['cantidad']   = $objQueryCount->getSingleScalarResult();
            $arrayRespuesta['resultados'] = $objQuery->getResult();
        }
        catch(\Exception $ex)
        {
            $strMensajeError = $ex->getMessage();
        }
        $arrayRespuesta['error'] = $strMensajeError;
        return $arrayRespuesta;
    }
}
