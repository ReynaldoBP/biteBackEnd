<?php

namespace AppBundle\Repository;
use Doctrine\ORM\Query\ResultSetMappingBuilder;
/**
 * InfoUsuarioRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InfoUsuarioRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * 
     * Metodo encargado de retornar todos los usuarios segÃºn el estado.
     * 
     * @author Kevin Baque
     * @version 1.0 16-07-2019
     * 
     * @return array  $arrayUsuarios
     * 
     */    
    public function getUsuarios($arrayParametros)
    {
        $strEstado     = $arrayParametros['estado'] ? $arrayParametros['estado']:'';
        $arrayUsuarios = array();
        $objRsmBuilder = new ResultSetMappingBuilder($this->_em);
        $objQuery      = $this->_em->createNativeQuery(null, $objRsmBuilder);
        try
        {
            $strSelect = "SELECT IU.NOMBRES,IU.APELLIDOS,ATR.DESCRIPCION_TIPO_ROL ";
            $strFrom   = "FROM INFO_USUARIO IU
                            JOIN ADMI_TIPO_ROL ATR ON IU.TIPO_ROL_ID=ATR.ID_TIPO_ROL ";
            $strWhere  = "WHERE IU.ESTADO=:ESTADO";
            $objQuery->setParameter("ESTADO", $strEstado);
            $objRsmBuilder->addScalarResult('NOMBRES', 'NOMBRES', 'string');
            $objRsmBuilder->addScalarResult('APELLIDOS', 'APELLIDOS', 'string');
            $objRsmBuilder->addScalarResult('DESCRIPCION_TIPO_ROL', 'DESCRIPCION_TIPO_ROL', 'string');

            $strSql  = $strSelect.$strFrom.$strWhere;
            $objQuery->setSQL($strSql);
            $arrayUsuarios['resultados'] = $objQuery->getResult();
        }
        catch(\Exception $e)
        {
            error_log('getUsuarios -> '.$e->getMessage());
            throw($e);
        }
        return $arrayUsuarios;
    }
}
