<?php

namespace AppBundle\Repository;
use Doctrine\ORM\Query\ResultSetMappingBuilder;

/**
 * InfoEncuestaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InfoEncuestaRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Documentación para la función 'getEncuestaCriterio'
     * Método encargado de retornar todos las encuestas según los parámetros recibidos.
     * 
     * @author Kevin Baque
     * @version 1.0 16-07-2019
     * 
     * @return array  $arrayEncuesta
     * 
     */    
    public function getEncuestaCriterio($arrayParametros)
    {
        $strIdRestaurante      = $arrayParametros['strIdRestaurante'] ? $arrayParametros['strIdRestaurante']:'';
        $strIdEncuesta         = $arrayParametros['strIdEncuesta'] ? $arrayParametros['strIdEncuesta']:'';
        $strDescripcion        = $arrayParametros['strDescripcion'] ? $arrayParametros['strDescripcion']:'';
        $strTitulo             = $arrayParametros['strTitulo'] ? $arrayParametros['strTitulo']:'';
        $strEstado             = $arrayParametros['strEstado'] ? $arrayParametros['strEstado']:array('ACTIVO','INACTIVO','ELIMINADO');
        $arrayEncuesta         = array();
        $strMensajeError       = '';
        $objRsmBuilder         = new ResultSetMappingBuilder($this->_em);
        $objQuery              = $this->_em->createNativeQuery(null, $objRsmBuilder);
        $objRsmBuilderCount    = new ResultSetMappingBuilder($this->_em);
        $objQueryCount         = $this->_em->createNativeQuery(null, $objRsmBuilderCount);
        try
        {
            $strSelect      = "SELECT EC.ID_ENCUESTA,EC.RESTAURANTE_ID,EC.DESCRIPCION,EC.TITULO,EC.ESTADO AS ESTADO_ENCUESTA, 
                                      IR.IDENTIFICACION,IR.RAZON_SOCIAL, IR.ESTADO AS ESTADO_RESTAURANTE,
                                      EC.USR_CREACION, EC.FE_CREACION,EC.USR_MODIFICACION,EC.FE_MODIFICACION ";
            $strSelectCount = "SELECT COUNT(*) AS CANTIDAD ";
            $strFrom        = "FROM INFO_ENCUESTA EC, INFO_RESTAURANTE IR ";
            $strWhere       = "WHERE EC.ESTADO in (:ESTADO) AND EC.RESTAURANTE_ID=IR.ID_RESTAURANTE ";
            $objQuery->setParameter("ESTADO", $strEstado);
            $objQueryCount->setParameter("ESTADO", $strEstado);
            if(!empty($strIdRestaurante))
            {
                $strWhere .= " AND EC.RESTAURANTE_ID =:RESTAURANTE_ID";
                $objQuery->setParameter("RESTAURANTE_ID", $strIdRestaurante);
                $objQueryCount->setParameter("RESTAURANTE_ID", $strIdRestaurante);
            }
            if(!empty($strIdEncuesta))
            {
                $strWhere .= " AND EC.ID_ENCUESTA =:ID_ENCUESTA";
                $objQuery->setParameter("ID_ENCUESTA", $strIdEncuesta);
                $objQueryCount->setParameter("ID_ENCUESTA", $strIdEncuesta);
            }
            if(!empty($strDescripcion))
            {
                $strWhere .= " AND lower(EC.DESCRIPCION) like lower(:DESCRIPCION)";
                $objQuery->setParameter("DESCRIPCION", '%' . trim($strDescripcion) . '%');
                $objQueryCount->setParameter("DESCRIPCION", '%' . trim($strDescripcion) . '%');
            }
            if(!empty($strTitulo))
            {
                $strWhere .= " AND lower(EC.TITULO) like lower(:TITULO)";
                $objQuery->setParameter("TITULO", '%' . trim($strTitulo) . '%');
                $objQueryCount->setParameter("TITULO", '%' . trim($strTitulo) . '%');
            }
            $objRsmBuilder->addScalarResult('ID_ENCUESTA', 'ID_ENCUESTA', 'string');
            $objRsmBuilder->addScalarResult('RESTAURANTE_ID', 'RESTAURANTE_ID', 'string');
            $objRsmBuilder->addScalarResult('DESCRIPCION', 'DESCRIPCION', 'string');
            $objRsmBuilder->addScalarResult('TITULO', 'TITULO', 'string');
            $objRsmBuilder->addScalarResult('ESTADO_ENCUESTA', 'ESTADO_ENCUESTA', 'string');
            $objRsmBuilder->addScalarResult('IDENTIFICACION', 'IDENTIFICACION', 'string');
            $objRsmBuilder->addScalarResult('RAZON_SOCIAL', 'RAZON_SOCIAL', 'string');
            $objRsmBuilder->addScalarResult('NUMERO_CONTACTO', 'NUMERO_CONTACTO', 'string');
            $objRsmBuilder->addScalarResult('ESTADO_RESTAURANTE', 'ESTADO_RESTAURANTE', 'string');
            $objRsmBuilder->addScalarResult('USR_CREACION', 'USR_CREACION', 'string');
            $objRsmBuilder->addScalarResult('FE_CREACION', 'FE_CREACION', 'date');
            $objRsmBuilder->addScalarResult('USR_MODIFICACION', 'USR_MODIFICACION', 'string');
            $objRsmBuilder->addScalarResult('FE_MODIFICACION', 'FE_MODIFICACION', 'date');

            $objRsmBuilderCount->addScalarResult('CANTIDAD', 'Cantidad', 'integer');
            $strSql       = $strSelect.$strFrom.$strWhere;
            $objQuery->setSQL($strSql);
            $strSqlCount  = $strSelectCount.$strFrom.$strWhere;
            $objQueryCount->setSQL($strSqlCount);
            $arrayEncuesta['cantidad']   = $objQueryCount->getSingleScalarResult();
            $arrayEncuesta['resultados'] = $objQuery->getResult();
        }
        catch(\Exception $ex)
        {
            $strMensajeError = $ex->getMessage();
        }
        $arrayEncuesta['error'] = $strMensajeError;
        return $arrayEncuesta;
    }
}
