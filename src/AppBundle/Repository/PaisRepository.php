<?php

namespace AppBundle\Repository;
use Doctrine\ORM\Query\ResultSetMappingBuilder;

/**
 * PaisRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PaisRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * 
     * Metodo encargado de retornar todos los paises segÃºn los parametros enviados.
     * 
     * @author Kevin Baque
     * @version 1.0 16-07-2019
     * 
     * @return array  $arrayPais
     * 
     */    
    public function getPais($arrayParametros)
    {
        $strEstado       = $arrayParametros['estado'] ? $arrayParametros['estado']:'';
        $arrayPais       = array();
        $objRsmBuilder   = new ResultSetMappingBuilder($this->_em);
        $objQuery        = $this->_em->createNativeQuery(null, $objRsmBuilder);
        $strMensajeError = '';
        $strSelect       = '';
        $strFrom         = '';
        $strWhere        = '';
        try
        {
            $strSelect = "SELECT pais.PAIS_NOMBRE,pais.PAIS_CODIGO,pais.ESTADO ";
            $strFrom   = "FROM ADMI_PAIS pais ";
            if(!empty($strEstado))
            {
                $strWhere  = "WHERE pais.ESTADO=:ESTADO";
                $objQuery->setParameter("ESTADO", $strEstado);
            }
            $objRsmBuilder->addScalarResult('PAIS_NOMBRE', 'PAIS_NOMBRE', 'string');
            $objRsmBuilder->addScalarResult('PAIS_CODIGO', 'PAIS_CODIGO', 'string');
            $objRsmBuilder->addScalarResult('ESTADO', 'ESTADO', 'string');

            $strSql  = $strSelect.$strFrom.$strWhere;
            $objQuery->setSQL($strSql);
            $arrayPais['pais'] = $objQuery->getResult();
        }
        catch(\Exception $e)
        {
            $strMensajeError = $ex->getMessage();
        }
        $arrayPais['error'] = $strMensajeError;
        return $arrayPais;
    }
}
